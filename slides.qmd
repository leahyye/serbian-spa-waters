---
title: "Serbian Spa Waters"
format:
  revealjs:
    theme: simple
    transition: slide
    background-transition: fade
    slideNumber: "c/t" # show slide number
    progress: true
    self-contained: true
editor: visual
---

## Group 6

-   Elizabeth
-   Claude
-   Leah
-   Harry

## Introduction

-   Analysis of hydrochemical and radiological data of mineral and thermal waters in Serbia.
-   Original paper:
    -   PCA: 4 main factors explaining 74.2% of total variance
        -   3 Groups emerged - with 83.3% correct classification.
    -   HCA: identified 4 main groups and 8 subgroups

## Serbian springs

::: columns
::: {.column width="50%"}
-   Many mineral, thermal, and thermo-mineral water springs.
-   Some used for drinking water, others as curative spas.
-   Varied composition depends on the aquifer host rocks' chemical composition, flow conditions, and residence time in the aquifer.
-   Geologically highly complex.
:::

::: {.column width="50%"}
![](Screenshot_20251005_140707.png)
:::
:::

## About the dataset

-   30 observations
-   1 categorical variable
    -   Samples collected from four geological structures:
        1.  Hydrogeological basins
        2.  Karstic terrains
        3.  Volcanogenic massifs
        4.  Metamorphic regions

## 12 numerical variables

| Variable  | Description                   | Units     |
|-----------|-------------------------------|-----------|
| T         | Temperature                   | $^\circ$C |
| pH        | pH level (Acidity/Alkalinity) |           |
| EC        | Electrical conductivity       | $\mu$S/cm |
| TS        | Total disolved solids         | g/L       |
| Ca$^{2+}$ | Calcium                       | mg/L      |
| Mg$^{2+}$ | Magnesium                     |           |

## 12 numerical variables

| Variable    | Description                       | Units |
|-------------|-----------------------------------|-------|
| Na$^{+}$    | Sodium                            | mg/L  |
| K$^{+}$     | Potassium                         |       |
| Cl$^{-}$    | Chlorine                          |       |
| SO$^{2-}_4$ | Sulfate                           |       |
| HCO$^{-}_3$ | Bicarbonate                       |       |
| SiO$_2$     | Silica, dissolved silicon dioxide |       |

## Missing radiological variables

-   Six radiological variables not publicly available.

| Variable  | Description            | Units |
|-----------|------------------------|-------|
| GA        | Gross alpha activities | mBq/L |
| GB        | Gross beta activities  |       |
| $^{238}$U | Uranium isotope        |       |
| $^{228}$R | Radium isotope         |       |
| $^{226}$R |                        |       |
| $^{40}$K  | Potassium isotope      |       |

## Observations per geological structure

| Geological Structure   | Number of Observations |
|------------------------|------------------------|
| Hydrogeological Basins | 5                      |
| Karstic Terrains       | 5                      |
| Volcanogenic Massifs   | 14                     |
| Metamorphic Regions    | 6                      |

-   Unbalanced data set

## Correlation Heatmap

::: columns
::: {.column width="40%"}
-   Certain variables highly correlated:
    -   Electrical conductivity & total dissolved solids
    -   Potassium (K) & Bicarbonate (HCO)
    -   Sodium (Na) & Bicarbonate (HCO)
:::

::: {.column width="60%"}
```{r corrplot, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.width=7, fig.height=7, dpi=100}
library(corrplot)
library(dplyr)
library(GGally)


data <- read.csv("serbianspawater.csv")

numeric_cols <- data[sapply(data, is.numeric) & !(names(data) %in% c("idNum", "geoStruct"))]
# Select numeric features for scaling 
X <- data[, 3:14]                    #all numerical categories
X <- as.data.frame(scale(X))         # z-scores per variable
#X$.row <- 1:nrow(X)

par(family = "Times")
cor_mat <- cor(X, use = "pairwise.complete.obs", method = "pearson")
corrplot(cor_mat,
         method = "color",        
         type = "upper",          
         order = "hclust",        
         addCoef.col = "black",   
         number.cex = 0.7,        
         tl.col = "black",        
         tl.srt = 45,             
         diag = FALSE, 
         col = colorRampPalette(c("#046C9A","white","#FD6467"))(200)
)
```
:::
:::

## Boxplots

::: columns
::: {.column width="40%"}
-   Variables standardized to allow comparison.
-   Data set characterized by high variation, right skew, and outliers.
:::

::: {.column width="60%"}
```{r boxplots, echo=FALSE, include=TRUE, warning=FALSE, message=FALSE, fig.width=6, fig.height=6, dpi=100}
library(tidyr)
library(wesanderson)
library(ggplot2)

# Select numeric features for scaling 
X <- data[, 3:14]                    #all numerical categories
X <- as.data.frame(scale(X))         # z-scores per variable
X$.row <- 1:nrow(X)

# reshaping is to long for ggplot so use tidyr library
box_long <- pivot_longer(           #tidyr
  X,
  cols = - .row,
  names_to = "variable",
  values_to = "value"
)

colors <- c(
  wes_palette("Darjeeling1"),     
  wes_palette("FantasticFox1"),
  wes_palette("Darjeeling2")    
)

colors <- colors[1:12]

# boxplots on a common axis (z-scored)
ggplot(box_long, aes(x = variable, y = value, fill = variable)) +
  geom_boxplot(notch = TRUE, outlier.alpha = 0.6, na.rm = TRUE) +
  coord_flip() +
  scale_fill_manual(values = colors) + 
  labs(x = NULL, 
       y = "Scaled value (z-score)",
       title = "Boxplots: All Variables (Z-scored)") +
  theme_minimal(base_family = "Times New Roman") + 
  theme(
    plot.title = element_text(face = "bold", size = 22),  
    axis.title = element_text(size = 20),                  
    axis.text.x = element_text(size = 16), 
    axis.text.y = element_text(size = 16),
    panel.grid.major = element_line(color = "grey80", size = 0.3),
    panel.grid.minor = element_blank(),
    legend.position = "none"
  )
```
:::
:::

## Checking for multivariate normality

::: columns
::: column
-   MANOVA residual Mahalanobis distances vs. theoretical $\chi^2$ distribution as a diagnostic.
-   Assumption of multivariate normality not satisfied.
-   Original paper used Box-Cox transformation.
    -   Sensitive to outliers.
-   Log transformation needed.
:::

::: column
```{r multivariate normal, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.8}
# Fit MANOVA model using geoStruct as grouping
fit <- manova(as.matrix(X) ~ data$geoStruct)
# Extract residuals
res <- residuals(fit)
# Mahalanobis distances of residuals
mu_res <- colMeans(res)
S_res  <- cov(res)
d2_res <- mahalanobis(res, center = mu_res, cov = S_res)

# Degrees of freedom = number of variables
df <- ncol(res)

# QQ-plot
par(family = "serif",
    cex.main = 2,
    cex.lab = 2,
    cex.axis = 1.8,
    mar = c(5, 6, 4, 2))

qqplot(qchisq(ppoints(nrow(res)), df = df), d2_res,
       main = "QQ-plot of MANOVA residuals",
       xlab = expression(paste(chi^2, " quantiles")),
       ylab = expression(paste("Ordered residual ", d[M]^2)))
abline(0,1,col="#046C9A", lwd = 2)
```
:::
:::

## Re-checking for normality

::: columns
::: {.column width="40%"}
-   Boxplots far more symmetric after log-transformation.
-   Some outliers still present, but fewer.
:::

::: {.column width="60%"}
```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.width=6, fig.height=5, dpi=100}

# Log transforming numeric variables and adding them into dataset as new columns
data$log.tempCels <- log(data$tempCels)
data$log.pH <- log(data$pH)
data$log.elec.Cond <- log(data$elecCond)
data$log.totSolid <- log(data$totSolid)
data$log.Ca2 <- log(data$Ca2)
data$log.Mg2 <- log(data$Mg2)
data$log.Na <- log(data$Na)
data$log.K <- log(data$K)
data$log.Cl <- log(data$Cl)
data$log.SO2 <- log(data$SO2)
data$log.HCO <- log(data$HCO)
data$log.SiO <- log(data$SiO)

X.log <- data[, 16:27]                    # all log transformed numerical variables
X.log <- as.data.frame(scale(X.log))         # z-scores per variable
X.log$.row <- 1:nrow(X.log)

box_long <- pivot_longer(           
  X.log,
  cols = - .row,
  names_to = "variable",
  values_to = "value"
)

# not z-scored
ggplot(box_long, aes(x = variable, y = value, fill = variable)) +
  geom_boxplot(notch = TRUE, outlier.alpha = 0.6, na.rm = TRUE) +
  coord_flip() +
  scale_fill_manual(values = colors) + 
  labs(x = NULL, y = "Scaled value (z-score)",
       title = "Boxplots: Log Transformed Variables (Z-scored)") +
  theme_minimal(base_family = "Times New Roman") + 
  theme(
    panel.grid.major = element_line(color = "grey80", size = 0.3),
    panel.grid.minor = element_blank(),
    plot.title = element_text(face = "bold", size = 16),
    axis.text = element_text(size = 12),
    legend.position = "none"
  )
```
:::
:::

## Re-checking for normality

::: columns
::: {.column width="40%"}
-   Improved performance of MANOVA residual Mahalanobis distances against the theoretical $\chi^2$ distribution.
-   Deviations remain.
:::

::: {.column width="60%"}
```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.width=6, fig.height=6, dpi=100}

X_log_matrix <- as.matrix(X.log[, !names(X.log) %in% ".row"])

# Fit MANOVA model
fit_log <- manova(X_log_matrix ~ data$geoStruct)
res_log <- residuals(fit_log)

# Reusing Prev code
# Mahalanobis distances of residuals
mu_res_log <- colMeans(res_log)
S_res_log  <- cov(res_log)
d2_res_log <- mahalanobis(res_log, center = mu_res_log, cov = S_res_log)

# Degrees of freedom = number of variables
df_log <- ncol(res_log)

# QQ-plot
par(family = "serif",
    cex.main = 2,
    cex.lab = 1.8,
    cex.axis = 1.8,
    mar = c(5, 6, 4, 2))

qqplot(qchisq(ppoints(nrow(res_log)), df = df_log), d2_res_log,
       main = "QQ-plot of MANOVA (log transformed) residuals",
       xlab = expression(paste(chi^2, " quantiles")),
       ylab = expression(paste("Ordered residual ", d[M]^2)))
abline(0,1,col="#046C9A", lwd = 2)
```
:::
:::

## PCA

```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.8, fig.height=6, dpi=100}
pca_fit <- prcomp(X_log_matrix, center=TRUE, scale. = TRUE) # apply pca on relevant explanatory numerical columns 

# variance explained
var_explained <- pca_fit$sdev^2 / sum(pca_fit$sdev^2)

# data frame for ggplot
df <- data.frame(
  PC = seq_along(var_explained),
  Variance = var_explained
)

ggplot(df, aes(x = PC, y = Variance)) +
  geom_line(color = "#046C9A", linewidth = 1) +
  geom_point(size = 3, color = "#046C9A") +
  labs(
    title = "Scree Plot",
    x = "Principal Component",
    y = "Proportion of Variance Explained"
  ) +
  theme_minimal(base_family = "serif") +
  theme(
    plot.title = element_text(size = 20, face = "bold"),
    axis.title = element_text(size = 16),
    axis.text = element_text(size = 14)
  )
```

## PCA

```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.8, fig.height=6, dpi=100}
library(knitr)
library(kableExtra)

cum_var <- cumsum(var_explained)

# select only first 8 PCs
var_explained8 <- var_explained[1:8]
cum_var8 <- cum_var[1:8]

# wide table
pca_wide8 <- rbind(
  `Proportion of Variance` = var_explained8,
  `Cumulative Proportion` = cum_var8
)
colnames(pca_wide8) <- paste0("PC", 1:8)

kable(pca_wide8, format = "html", booktabs = TRUE) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    font_size = 22
  ) %>%
  kable_classic(full_width = FALSE, html_font = "Times New Roman")
```

## PCA

```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.8, out.width='90%', out.height='80%'}
pc_loadings <- pca_fit$rotation[,1:8]
pc_loadings <- round(pc_loadings, 3)

pc_loadings_df <- as.data.frame(pc_loadings)

pc_loadings_bold <- pc_loadings_df %>%
  mutate(across(everything(), ~cell_spec(
    ., 
    bold = abs(.) > 0.3
  )))

kable(pc_loadings_bold, escape = FALSE, format = "html", booktabs = TRUE) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    full_width = FALSE,
    font_size = 26,
    html_font = "Times New Roman"
  ) %>%
  row_spec(0, bold = TRUE, font_size = 28)
```

## PC2 vs. PC1 with outliers

```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.8, out.width='90%', out.height='80%'}

# Mahalanobis distances
mu <- colMeans(X)
S  <- cov(X)
d2 <- mahalanobis(X, center = mu, cov = S)
cut <- qchisq(0.95, df = ncol(X))
outliers <- d2 > cut

# Add to PCA plot data
pca_plot_data <- data.frame(
  PC1 = pca_fit$x[, 1],
  PC2 = pca_fit$x[, 2],
  Geological_Group = as.factor(data$geoStruct),
  Water_Source = data$waterSource,
  Outlier = outliers
)

# Plot
ggplot(pca_plot_data, aes(x = PC1, y = PC2, color = Geological_Group)) +
  geom_point(size = 4, alpha = 0.8) +
  # Highlight outliers
  geom_point(data = subset(pca_plot_data, Outlier), 
             aes(x = PC1, y = PC2), 
             shape = 21, fill = "yellow", color = "orange", size = 4, stroke = 1.2) +
  geom_text(data = subset(pca_plot_data, Outlier),
            aes(label = Water_Source),
            color = "black",
  size = 3.5, max.overlaps = 15, box.padding = 0.5, point.padding = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
  geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
  stat_ellipse(level = 0.95, alpha = 0.7) +  
  labs(
    title = "Fig. 7: PC2 vs PC1 with outliers",
    x = paste0("PC1 (", round(summary(pca_fit)$importance[2,1]*100, 1), "%)"),
    y = paste0("PC2 (", round(summary(pca_fit)$importance[2,2]*100, 1), "%)"),
    color = "Geological\nStructure"
  ) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "right")

```

## Factor Analysis: Factor Adequacy test

```{r echo=FALSE, include=TRUE, warning=FALSE, message=FALSE}
library(psych)
X.log <- X.log[, !names(X.log) == ".row"] # remove '.row' column

pvalues <- rep(0, 5) 
for(f in 1:5) {
  res <- try(factanal(X.log, factors = f), silent = TRUE) # get the p-values for each factor
  if(!inherits(res, "try-error")) {
    pvalues[f] <- res$PVAL
  }
}

ggplot(data.frame(Factors = 1:5, pvalues = pvalues), 
       aes(x = Factors, y = pvalues)) +
  geom_line(color = "#046C9A", size = 1) +
  geom_point(color = "#046C9A", size = 3) +
  labs(
    x = "Number of Factors",
    y = "p-value"
  ) +
  theme_minimal(base_family = "serif") +
  theme(
    plot.title = element_text(size = 20, face = "bold"),
    axis.title = element_text(size = 16),
    axis.text = element_text(size = 14)
  )
```

## Factor Analysis Loadings

```{r}
library(knitr)
library(kableExtra)

# Create the results table
fa_results <- data.frame(
  Factor = c("Factor 1", "Factor 2", "Factor 3", "Factor 4", "Factor 5"),
  `SS Loadings` = c(4.173, 2.843, 1.378, 1.120, 0.379),
  `Proportion Var` = c(0.348, 0.237, 0.115, 0.093, 0.032),
  `Cumulative Var` = c(0.348, 0.585, 0.700, 0.793, 0.824)
)

# Create the statistical test info
test_info <- data.frame(
  Statistic = c("Chi-square", "Degrees of freedom", "p-value"),
  Value = c("23.25", "16", "0.107")
)

# Display the main results table
kable(fa_results, format = "html", booktabs = TRUE, align = c("l", "r", "r", "r"),
      caption = "Factor Analysis Variance Explained") %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                font_size = 20,
                full_width = FALSE) %>%
  column_spec(1, bold = TRUE) %>%
  row_spec(5, background = "#FD6467")  # Highlight the weak 5th factor

# Display the statistical test
cat("\n\n")
kable(test_info, format = "html", booktabs = TRUE, align = c("l", "r"),
      caption = "Factor Adequacy Test") %>%
  kable_styling(bootstrap_options = c("striped", "hover"),
                font_size = 18,
                full_width = FALSE) %>%
  row_spec(3, background = ifelse(0.107 > 0.05, "#046C9A", "#FD6467"))  # blue if p > 0.05
```


## Factor Analysis Diagram

```{r echo=FALSE}
faresult <- factanal(X.log, factors=5)
fa.diagram(faresult$loadings, digits=4)
```

## Visual Check of Group Covariance
::::: columns
::: {.column width="40%"}
-   Groups show different shapes and orientations.

-   Covariance structures not equal.

-   LDA not suitable for this dataset.
:::

::: {.column width="60%"}

```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.asp=0.9,fig.height=6, out.width="100%"}
library(MASS)
lda_data <- data.frame(geoStruct = data$geoStruct, X_log_matrix)
lda_fit <- lda(geoStruct ~ ., data = lda_data)
lda_scores <- predict(lda_fit)$x

plot_data <- data.frame(lda_scores, Group = as.factor(lda_data$geoStruct))

ggplot(plot_data, aes(x = LD1, y = LD2, color = Group)) +
  geom_point(size = 3) +
  stat_ellipse(level = 0.95) +
  labs(title = "Fig. 10: Visual Check of Group Covariance",
       x = "Linear Discriminant 1",
       y = "Linear Discriminant 2") +
  theme_minimal()
```
:::
:::::
## Confusion matrix
::::: columns
::: {.column width="40%"}
-  Some overlap across groups — several misclassifications.

-  Classification accuracy is modest
:::

::: {.column width="60%"}
```{r echo=FALSE, include=TRUE, echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=6, out.width="100%"}
library(e1071)
library(caret)
y  <- factor(data$geoStruct)
Xl <- scale(as.data.frame(X_log_matrix))
# Leave-One-Out Cross-Validation
n <- nrow(Xl); pred <- factor(rep(NA,n), levels=levels(y))
for(i in 1:n){
  fit_i <- naiveBayes(x=Xl[-i,], y=y[-i])
  pred[i] <- predict(fit_i, newdata=Xl[i,,drop=FALSE])
}

# ensure factors have same levels
pred <- factor(pred, levels = levels(y))
y <- factor(y, levels = levels(y))

# create confusion matrix table
cm_table <- table(Predicted = pred, True = y) %>%
  as.data.frame() %>%
  rename(Freq = Freq)

# square matrix: make sure levels are respected for plotting
cm_table$Predicted <- factor(cm_table$Predicted, levels = levels(y))
cm_table$True <- factor(cm_table$True, levels = levels(y))

ggplot(cm_table, aes(x = True, y = Predicted, fill = Freq)) +
  geom_tile(color = NA, size = 0.8) +
  geom_text(aes(label = Freq), size = 6, family = "Times New Roman", fontface = "bold") +
  scale_fill_gradient(low = "white", high = "#046C9A") +
  labs(
    x = "True Class",
    y = "Predicted Class",
    title = "Figure 11: LOOCV Confusion Matrix"
  ) +
  theme_minimal(base_family = "Times New Roman") +
  theme(
    plot.title = element_text(size = 20, face = "bold"),
    axis.title = element_text(size = 16),
    axis.text = element_text(size = 14),
    panel.grid = element_blank()
  ) +
  coord_fixed() 
```
:::
:::::

## Summary




-  Re-analysed 30 Serbian spa sites using 12 chemical variables

-  Original study (Tanasković et al.) used 18 variables 

-  Radiological variables unavailable publicly
-  Differences reflect methodological scope - radiological model vs our interpretable, chemistry-only approach.

-  Geological signal still partially recoverable; integration of radiological variables or modern classifiers could enhance separation.

```{css}
.reveal {
  font-family: "Times New Roman", Georgia, serif; /* main slide font */
  background-color: white;                        /* force white background */
}

.reveal h1, .reveal h2, .reveal h3, .reveal h4, .reveal h5, .reveal h6 {
  font-family: "Times New Roman", Georgia, serif; /* headings also serif */
}

.reveal p, .reveal li {
  font-family: "Times New Roman", Georgia, serif; /* paragraph & list text */
}
```
